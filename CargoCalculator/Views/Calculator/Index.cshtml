@model CargoCalculator.Models.CalculatorModel

@{
    ViewBag.Title = "Index";
}



<div class="row">
    <div class="col-md-2">
    </div>
    <div class="col-md-9">
      @using (Html.BeginForm("Form2", "Home", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.width, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.width, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.width, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.height, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.height, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.height, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.depth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.depth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.depth, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" id="Submit" value="Calculate" onclick="return GetResult();" class="btn btn-primary" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div id="finalResult"></div>
                </div>
            </div>
        </div>
    }
    </div>
    <div class="col-md-1">
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryunobtrusive") @*For unobtrusive-ajax*@
    @Scripts.Render("~/bundles/jqueryval") @*For validate and validate-unobtrusive*@

    <script type="text/javascript">
        function GetResult() {
            //var res = validate();
            //if (res == false) {
            //    return false;
            //}
            var Obj = {
                Width: $('#width').val(),
                Height: $('#height').val(),
                Depth: $('#depth').val(),
                Weight: $('#weight').val()
            };
            $.ajax({
                url: "/Calculator/GetCalculatedResult",
                data: JSON.stringify(Obj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $('#finalResult').text(result.FinalPrice);
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
    </script>
}


